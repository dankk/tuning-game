{"version":3,"sources":["utils/notesContoller.js","hooks/useAudio.js","components/StringHint.js","components/String.js","components/ResultBox.js","components/StringGroup.js","components/StartPage.js","components/Main.js","components/App.js","index.js"],"names":["tunings","tones_list","notesArray","reduce","notes","oct","oct_notes","map","n","path","replace","name","useAudio","noteIndex","filePath","useState","audio","Audio","audioObj","setAudio","useEffect","handleChangeAudio","useCallback","length","pause","play","Button","require","StringHint","clicked","setClicked","variant","disabled","onClick","currentTime","err","console","log","playNote","useStyles","makeStyles","stringRoot","justifyContent","margin","width","stringMain","backgroundColor","stringSolveMain","stringChangeButton","String","stringIndex","selectedNoteIndex","realNoteIndex","isWrong","setSelectedNoteIndexes","noteChangeDisabled","setNoteChangeDisabled","changeSelectedNoteIndexes","newNoteIndex","s","v","i","tempDisableNoteChange","time","setTimeout","playString","classes","Grid","container","direction","className","item","xs","fullWidth","resultBox","display","height","alignItems","ResultBox","open","isCorrect","Dialog","Paper","color","theme","stringGroupRoot","topInfo","spacing","difficulty","score","StringGroup","setStarted","selectedTuning","startingNoteIndexes","setStartingNoteIndexes","selectedNoteIndexes","isSubmitting","setIsSubmitting","isSubmitCorrect","setIsSubmitCorrect","setScore","getNewData","randInd","newNotesArray","Array","from","r","Math","floor","random","includes","push","forEach","randOffset","ceil","alteredNotesArray","size","Typography","index","arr","every","startPageRoot","StartPage","setDifficulty","Tooltip","title","fontSize","Slider","style","value","valueLabelDisplay","step","marks","min","max","onChange","event","Main","isStarted","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAAaA,EAED,CAAC,GAAI,GAAI,GAAI,GAAI,EAAG,GAG1BC,EAAa,CACjB,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,KAKWC,EAFK,CAAC,EAAG,EAAG,EAAG,GAEQC,QAAO,SAACC,EAAOC,GACjD,IAAMC,EAAYL,EAAWM,KAAI,SAACC,GAAD,MAAQ,CACvCC,KAAM,uBAAgBD,GAAhB,OAAoBH,EAApB,QAA8BK,QAAQ,IAAK,KACjDC,KAAK,GAAD,OAAKH,GAAL,OAASH,OAEf,MAAM,GAAN,mBAAWD,GAAX,YAAqBE,MACpB,ICzBY,SAASM,EAASC,GAC/B,IAAMC,EAAWZ,EAAWW,GAAWJ,KADG,EAEbM,mBAAS,CACpCC,MAAO,IAAIC,MAAMH,GACjBD,YACAF,KAAMT,EAAWW,GAAWF,OALY,mBAEnCO,EAFmC,KAEzBC,EAFyB,KAQ1CC,qBACE,kBACED,EAAS,CACPH,MAAO,IAAIC,MAAMH,GACjBD,YACAF,KAAMT,EAAWW,GAAWF,SAEhC,CAACE,IAGH,IAAMQ,EAAoBC,uBAAY,SAACT,GACrC,KAAIA,EAAY,GAAKA,GAAaX,EAAWqB,QAA7C,CAEAL,EAASF,MAAMQ,QACf,IAAMR,EAAQ,IAAIC,MAAMf,EAAWW,GAAWJ,MAC9CO,EAAMS,OACNN,EAAS,CAAEH,MAAOA,EAAOH,YAAWF,KAAMT,EAAWW,GAAWF,UAC/D,IAEH,MAAO,CAACO,EAAUG,G,IC3BZK,EAAWC,EAAQ,IAAnBD,OAwBOE,MAtBf,YAAoC,IAAdf,EAAa,EAAbA,UAAa,EACHE,oBAAS,GADN,mBAC1Bc,EAD0B,KACjBC,EADiB,OAEdlB,EAASC,GAArBK,EAF0B,oBAejC,OACE,cAAC,EAAD,CAAQa,QAAQ,WAAWC,SAAUH,EAASI,QAAS,kBAZxC,WACf,IACEf,EAASF,MAAMQ,QACfN,EAASF,MAAMkB,YAAc,EAC7BhB,EAASF,MAAMS,OACfK,GAAW,GACX,MAAOK,GACPC,QAAQC,IAAIF,IAK+CG,IAA7D,mBCfEC,EAAYC,YAAW,CAC3BC,WAAY,CAAEC,eAAgB,SAAUC,OAAQ,EAAGC,MAAO,QAC1DC,WAAY,CAAED,MAAO,MAAOE,gBAAiB,SAC7CC,gBAAiB,CAAED,gBAAiB,OAAQF,MAAO,OACnDI,mBAAoB,CAAEF,gBAAiB,WAsG1BG,MAnGf,YAMI,IALFC,EAKC,EALDA,YACAC,EAIC,EAJDA,kBACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,QACAC,EACC,EADDA,uBACC,EACqC1C,EAASuC,GAD9C,mBACMjC,EADN,KACgBG,EADhB,OAGmDN,oBAAS,GAH5D,mBAGMwC,EAHN,KAG0BC,EAH1B,KAKKC,EAA4B,SAACP,EAAaQ,GAC9CJ,GAAuB,SAACK,GAAD,OACrBA,EAAEpD,KAAI,SAACqD,EAAGC,GAAJ,OAAWA,IAAMX,EAAcQ,EAAeE,SAIlDE,EAAwB,SAACC,GAC7BP,GAAsB,GACtBQ,YAAW,kBAAMR,GAAsB,KAAQO,IAe3CE,EAAa,WACjB,IACE/C,EAASF,MAAMQ,QACfN,EAASF,MAAMkB,YAAc,EAC7BhB,EAASF,MAAMS,OACf,MAAOU,GACPC,QAAQC,IAAIF,KAIV+B,EAAU3B,IAEhB,OAAKc,EAiBH,eAACc,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,UAAWJ,EAAQzB,WAAnD,UACE,cAAC0B,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACf,cAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAAC9C,EAAA,EAAD,CACE4C,UAAWJ,EAAQlB,mBACnBjB,QAAQ,WACR0C,WAAS,EACTzC,SAAUuB,EACVtB,QAAS,kBAhDf6B,EAAsB,KACtBL,EAA0BP,EAAahC,EAASL,UAAY,QAC5DQ,EAAkBH,EAASL,UAAY,IAyCnC,SAOG,gBAGL,cAACsD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGF,UAAWJ,EAAQnB,gBAArC,SACE,cAACrB,EAAA,EAAD,CAAQK,QAAQ,WAAW0C,WAAS,EAACxC,QAAS,kBAAMgC,KAApD,qBACQ/D,EAAWkD,GAAezC,KADlC,UAIF,cAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAAC9C,EAAA,EAAD,CACE4C,UAAWJ,EAAQlB,mBACnBjB,QAAQ,WACR0C,WAAS,EACTzC,SAAUuB,EACVtB,QAAS,kBA1Df6B,EAAsB,KACtBL,EAA0BP,EAAahC,EAASL,UAAY,QAC5DQ,EAAkBH,EAASL,UAAY,IAmDnC,SAOG,gBAGL,cAACsD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAY3D,UAAWuC,SA7CzB,eAACe,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,UAAWJ,EAAQzB,WAAnD,UACE,cAAC0B,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACf,cAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACf,cAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGF,UAAWJ,EAAQrB,WAArC,SACE,cAACnB,EAAA,EAAD,CAAQK,QAAQ,WAAW0C,WAAS,EAACxC,QAAS,kBAAMgC,KAApD,0BACQ/C,EAASP,UAGnB,cAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACf,cAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,Q,sDCjEjBjC,EAAYC,YAAW,CAC3BkC,UAAW,CACTC,QAAS,OACT/B,MAAO,OACPgC,OAAQ,OACRC,WAAY,SACZnC,eAAgB,YAmBLoC,MAff,YAAyC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UACnBd,EAAU3B,IAChB,OACE,cAAC0C,EAAA,EAAD,CAAQF,KAAMA,EAAd,SACE,cAACG,EAAA,EAAD,CAAOZ,UAAWJ,EAAQQ,UAA1B,SACGM,EACC,cAAC,IAAD,CAAWG,MAAM,YAEjB,cAAC,IAAD,CAAWA,MAAM,eCjBrB5C,EAAYC,aAAW,SAAC4C,GAAD,MAAY,CACvCC,gBAAiB,CACfR,WAAY,UAEdS,QAAS,CACP3C,OAAQyC,EAAMG,QAAQ,GACtB3C,MAAO,OACPF,eAAgB,eAChBmC,WAAY,UAEdW,WAAY,GACZC,MAAO,OAmFMC,MAhFf,YAAkD,IAA3BF,EAA0B,EAA1BA,WAAYG,EAAc,EAAdA,WAC3BzB,EAAU3B,IACVqD,EAAiB5F,EAFwB,EAIOe,mBAAS,IAJhB,mBAIxC8E,EAJwC,KAInBC,EAJmB,OAKO/E,mBAAS,IALhB,mBAKxCgF,EALwC,KAKnBzC,EALmB,OAOPvC,oBAAS,GAPF,mBAOxCiF,EAPwC,KAO1BC,EAP0B,OAQDlF,oBAAS,GARR,mBAQxCmF,EARwC,KAQvBC,EARuB,OASrBpF,mBAAS,GATY,mBASxC0E,EATwC,KASjCW,EATiC,KAWzCC,EAAa,WACjB,IAAMnG,ELFuB,SAACM,EAAGN,GAInC,IAFA,IAAIoG,EAAU,GACVC,EAAgBC,MAAMC,KAAKvG,GACxBoG,EAAQ/E,OAASf,GAAG,CACzB,IAAMkG,EAAIC,KAAKC,MAAsB,EAAhBD,KAAKE,UACrBP,EAAQQ,SAASJ,IACpBJ,EAAQS,KAAKL,GAQjB,OALAJ,EAAQU,SAAQ,SAACpD,GACf,IAAMqD,EACJN,KAAKO,KAAsB,EAAjBP,KAAKE,OAAO,KAAWF,KAAKE,OAAO,GAAK,GAAM,GAAK,GAC/DN,EAAc3C,GAAK1D,EAAW0D,GAAKqD,KAE9BV,EKbcY,CAAkB3B,EAAYI,GAEjDtC,EAAuBpD,GACvB4F,EAAuB5F,GAEvB+F,GAAgB,IAyBlB,OArBA7E,qBAAU,WACRiF,MACC,IAoBD,eAAClC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,UAAWJ,EAAQmB,gBAAtD,UACE,eAAClB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,UAAWJ,EAAQoB,QAAnD,UACE,cAACnB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAAC7C,EAAA,EAAD,CAAQK,QAAQ,WAAWqF,KAAK,QAAQnF,QAAS,WAPvD0D,GAAW,IAOL,SACG,UAGL,cAACxB,EAAA,EAAD,CAAMI,MAAI,EAACD,UAAWJ,EAAQuB,MAA9B,SACE,eAAC4B,EAAA,EAAD,qBAAoB5B,OAEtB,cAACtB,EAAA,EAAD,CAAMI,MAAI,EAACD,UAAWJ,EAAQsB,WAA9B,SACE,eAAC6B,EAAA,EAAD,0BAAyB7B,UAI5BO,EAAoBxF,KAAI,SAACM,EAAWyG,GAAZ,OACvB,cAAC,EAAD,CAEEpE,YAAaoE,EACblE,cAAewC,EAAe0B,GAC9BnE,kBAAmBtC,EACnBwC,QAASwC,EAAoByB,KAAW1B,EAAe0B,GACvDhE,uBAAwB,SAACiE,GAAD,OAASjE,EAAuBiE,KALnDD,MAQT,cAAC5F,EAAA,EAAD,CACEK,QAAQ,WACRC,SAAUgE,EACV/D,QAAS,kBA7CbgE,GAAgB,GACZF,EAAoByB,OAAM,SAAC5D,EAAGC,GAAJ,OAAUD,IAAMgC,EAAe/B,QAC3DsC,GAAmB,GACnBC,GAAS,SAACzC,GAAD,OAAOA,EAAI,WAGtBK,YAAW,WACTiC,GAAgB,GAChBI,MACC,OAiCD,oBAOA,cAAC,EAAD,CAAWtB,KAAMiB,EAAchB,UAAWkB,Q,oCC5F1C3D,EAAYC,YAAW,CAC3BiF,cAAe,CAAE5C,WAAY,YAuChB6C,MApCf,YAA+D,IAA1CC,EAAyC,EAAzCA,cAAenC,EAA0B,EAA1BA,WAAYG,EAAc,EAAdA,WACxCzB,EAAU3B,IAMhB,OACE,eAAC4B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,UAAWJ,EAAQuD,cAAtD,UACE,eAACtD,EAAA,EAAD,CAAMI,MAAI,EAAV,uBAEE,cAACqD,EAAA,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,IAAD,CAAUC,SAAS,eAGvB,cAAC3D,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACwD,EAAA,EAAD,CACEC,MAAO,CAAEpF,MAAO,KAChBqF,MAAOzC,EACP0C,kBAAkB,OAClBC,KAAM,EACNC,OAAK,EACLC,IAAK,EACLC,IAAK,EACLC,SArBuB,SAACC,EAAOP,GACrCN,EAAcM,QAuBZ,cAAC9D,EAAA,EAAD,UACE,cAACzC,EAAA,EAAD,CAAQO,QAAS,kBAAM0D,GAAW,IAAO5D,QAAQ,WAAjD,yBCjBO0G,MAdf,YAA0C,IAA1BC,EAAyB,EAAzBA,UAAW/C,EAAc,EAAdA,WAAc,EACH5E,mBAAS,GADN,mBAChCyE,EADgC,KACpBmC,EADoB,KAGvC,OAAOe,EACL,cAAC,EAAD,CAAalD,WAAYA,EAAYG,WAAYA,IAEjD,cAAC,EAAD,CACEgC,cAAeA,EACfnC,WAAYA,EACZG,WAAYA,KCCHgD,MAXf,WAAgB,IAAD,EACmB5H,oBAAS,GAD5B,mBACN2H,EADM,KACK/C,EADL,KAGb,OACE,cAAC,EAAD,CACE+C,UAAWA,EACX/C,WAAY,SAAC+C,GAAD,OAAe/C,EAAW+C,OCL5CE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3ae88489.chunk.js","sourcesContent":["export const tunings = {\n  //string 1 - 6\n  standard: [28, 23, 19, 14, 9, 4],\n};\n\nconst tones_list = [\n  \"C\",\n  \"C#\",\n  \"D\",\n  \"D#\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"G\",\n  \"G#\",\n  \"A\",\n  \"A#\",\n  \"B\",\n];\n\nconst octs_list = [2, 3, 4, 5];\n\nexport const notesArray = octs_list.reduce((notes, oct) => {\n  const oct_notes = tones_list.map((n) => ({\n    path: `/sound-files/${n}${oct}.mp3`.replace(\"#\", \"s\"),\n    name: `${n}${oct}`,\n  }));\n  return [...notes, ...oct_notes];\n}, []);\n\nexport const alteredNotesArray = (n, notesArray) => {\n  //n: num of notes to change; 1-6\n  let randInd = []; //0-5\n  let newNotesArray = Array.from(notesArray);\n  while (randInd.length < n) {\n    const r = Math.floor(Math.random() * 6);\n    if (!randInd.includes(r)) {\n      randInd.push(r);\n    }\n  }\n  randInd.forEach((v) => {\n    const randOffset =\n      Math.ceil(Math.random(1) * 3) * (Math.random(1) > 0.5 ? 1 : -1);\n    newNotesArray[v] = notesArray[v] + randOffset;\n  });\n  return newNotesArray;\n};\n","import { useState, useCallback, useEffect } from \"react\";\nimport { notesArray } from \"../utils/notesContoller\";\n\nexport default function useAudio(noteIndex) {\n  const filePath = notesArray[noteIndex].path;\n  const [audioObj, setAudio] = useState({\n    audio: new Audio(filePath),\n    noteIndex,\n    name: notesArray[noteIndex].name,\n  });\n\n  useEffect(\n    () =>\n      setAudio({\n        audio: new Audio(filePath),\n        noteIndex,\n        name: notesArray[noteIndex].name,\n      }),\n    [noteIndex]\n  );\n\n  const handleChangeAudio = useCallback((noteIndex) => {\n    if (noteIndex < 0 || noteIndex >= notesArray.length) return;\n\n    audioObj.audio.pause();\n    const audio = new Audio(notesArray[noteIndex].path);\n    audio.play();\n    setAudio({ audio: audio, noteIndex, name: notesArray[noteIndex].name });\n  }, []);\n\n  return [audioObj, handleChangeAudio];\n}\n","import { useState } from \"react\";\nimport useAudio from \"../hooks/useAudio\";\n\nconst { Button } = require(\"@material-ui/core\");\n\nfunction StringHint({ noteIndex }) {\n  const [clicked, setClicked] = useState(false);\n  const [audioObj] = useAudio(noteIndex);\n\n  const playNote = () => {\n    try {\n      audioObj.audio.pause();\n      audioObj.audio.currentTime = 0;\n      audioObj.audio.play();\n      setClicked(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Button variant=\"outlined\" disabled={clicked} onClick={() => playNote()}>\n      Hint\n    </Button>\n  );\n}\n\nexport default StringHint;\n","import { Button, Grid, makeStyles } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport useAudio from \"../hooks/useAudio\";\nimport StringHint from \"./StringHint\";\nimport { notesArray } from \"../utils/notesContoller\";\n\nconst useStyles = makeStyles({\n  stringRoot: { justifyContent: \"center\", margin: 3, width: \"80vw\" },\n  stringMain: { width: \"40%\", backgroundColor: \"white\" },\n  stringSolveMain: { backgroundColor: \"gray\", width: \"40%\" },\n  stringChangeButton: { backgroundColor: \"white\" },\n});\n\nfunction String({\n  stringIndex,\n  selectedNoteIndex,\n  realNoteIndex,\n  isWrong,\n  setSelectedNoteIndexes,\n}) {\n  const [audioObj, handleChangeAudio] = useAudio(selectedNoteIndex);\n\n  const [noteChangeDisabled, setNoteChangeDisabled] = useState(false);\n\n  const changeSelectedNoteIndexes = (stringIndex, newNoteIndex) => {\n    setSelectedNoteIndexes((s) =>\n      s.map((v, i) => (i === stringIndex ? newNoteIndex : v))\n    );\n  };\n\n  const tempDisableNoteChange = (time) => {\n    setNoteChangeDisabled(true);\n    setTimeout(() => setNoteChangeDisabled(false), time);\n  };\n\n  const lowerString = () => {\n    tempDisableNoteChange(100);\n    changeSelectedNoteIndexes(stringIndex, audioObj.noteIndex - 1);\n    handleChangeAudio(audioObj.noteIndex - 1);\n  };\n\n  const raiseString = () => {\n    tempDisableNoteChange(100);\n    changeSelectedNoteIndexes(stringIndex, audioObj.noteIndex + 1);\n    handleChangeAudio(audioObj.noteIndex + 1);\n  };\n\n  const playString = () => {\n    try {\n      audioObj.audio.pause();\n      audioObj.audio.currentTime = 0;\n      audioObj.audio.play();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const classes = useStyles();\n\n  if (!isWrong) {\n    return (\n      <Grid container direction=\"row\" className={classes.stringRoot}>\n        <Grid item xs={1} />\n        <Grid item xs={2} />\n        <Grid item xs={6} className={classes.stringMain}>\n          <Button variant=\"outlined\" fullWidth onClick={() => playString()}>\n            {`► ${audioObj.name}`}\n          </Button>\n        </Grid>\n        <Grid item xs={2} />\n        <Grid item xs={1} />\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid container direction=\"row\" className={classes.stringRoot}>\n      <Grid item xs={1} />\n      <Grid item xs={2}>\n        <Button\n          className={classes.stringChangeButton}\n          variant=\"outlined\"\n          fullWidth\n          disabled={noteChangeDisabled}\n          onClick={() => lowerString()}\n        >\n          {\"<- ♭\"}\n        </Button>\n      </Grid>\n      <Grid item xs={6} className={classes.stringSolveMain}>\n        <Button variant=\"outlined\" fullWidth onClick={() => playString()}>\n          {`? ${notesArray[realNoteIndex].name} ?`}\n        </Button>\n      </Grid>\n      <Grid item xs={2}>\n        <Button\n          className={classes.stringChangeButton}\n          variant=\"outlined\"\n          fullWidth\n          disabled={noteChangeDisabled}\n          onClick={() => raiseString()}\n        >\n          {\"♯ ->\"}\n        </Button>\n      </Grid>\n      <Grid item xs={1}>\n        <StringHint noteIndex={realNoteIndex} />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default String;\n","import React from \"react\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Dialog, makeStyles, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  resultBox: {\n    display: \"flex\",\n    width: \"50px\",\n    height: \"50px\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nfunction ResultBox({ open, isCorrect }) {\n  const classes = useStyles();\n  return (\n    <Dialog open={open}>\n      <Paper className={classes.resultBox}>\n        {isCorrect ? (\n          <CheckIcon color=\"primary\" />\n        ) : (\n          <CloseIcon color=\"error\" />\n        )}\n      </Paper>\n    </Dialog>\n  );\n}\n\nexport default ResultBox;\n","import { Button, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport String from \"./String\";\nimport ResultBox from \"./ResultBox\";\nimport { tunings, alteredNotesArray } from \"../utils/notesContoller\";\nimport { useEffect, useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  stringGroupRoot: {\n    alignItems: \"center\",\n  },\n  topInfo: {\n    margin: theme.spacing(1),\n    width: \"90vw\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n  difficulty: {},\n  score: {},\n}));\n\nfunction StringGroup({ difficulty, setStarted }) {\n  const classes = useStyles();\n  const selectedTuning = tunings.standard; //make this changable?\n\n  const [startingNoteIndexes, setStartingNoteIndexes] = useState([]);\n  const [selectedNoteIndexes, setSelectedNoteIndexes] = useState([]);\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitCorrect, setIsSubmitCorrect] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const getNewData = () => {\n    const notesArray = alteredNotesArray(difficulty, selectedTuning);\n\n    setSelectedNoteIndexes(notesArray);\n    setStartingNoteIndexes(notesArray);\n\n    setIsSubmitting(false);\n  };\n\n  //init\n  useEffect(() => {\n    getNewData();\n  }, []);\n\n  const handleSubmit = () => {\n    setIsSubmitting(true);\n    if (selectedNoteIndexes.every((v, i) => v === selectedTuning[i])) {\n      setIsSubmitCorrect(true);\n      setScore((s) => s + 1);\n    }\n\n    setTimeout(() => {\n      setIsSubmitting(false);\n      getNewData();\n    }, 1500);\n  };\n\n  const goHome = () => {\n    setStarted(false);\n  };\n\n  return (\n    <Grid container direction=\"column\" className={classes.stringGroupRoot}>\n      <Grid container direction=\"row\" className={classes.topInfo}>\n        <Grid item>\n          <Button variant=\"outlined\" size=\"small\" onClick={() => goHome()}>\n            {\"<--\"}\n          </Button>\n        </Grid>\n        <Grid item className={classes.score}>\n          <Typography>Score: {score}</Typography>\n        </Grid>\n        <Grid item className={classes.difficulty}>\n          <Typography>Difficulty: {difficulty}</Typography>\n        </Grid>\n      </Grid>\n\n      {selectedNoteIndexes.map((noteIndex, index) => (\n        <String\n          key={index}\n          stringIndex={index}\n          realNoteIndex={selectedTuning[index]}\n          selectedNoteIndex={noteIndex}\n          isWrong={startingNoteIndexes[index] !== selectedTuning[index]}\n          setSelectedNoteIndexes={(arr) => setSelectedNoteIndexes(arr)}\n        />\n      ))}\n      <Button\n        variant=\"outlined\"\n        disabled={isSubmitting}\n        onClick={() => handleSubmit()}\n      >\n        Submit\n      </Button>\n      <ResultBox open={isSubmitting} isCorrect={isSubmitCorrect} />\n    </Grid>\n  );\n}\n\nexport default StringGroup;\n","import { Button, Grid, makeStyles, Slider, Tooltip } from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n\nconst useStyles = makeStyles({\n  startPageRoot: { alignItems: \"center\" },\n});\n\nfunction StartPage({ setDifficulty, difficulty, setStarted }) {\n  const classes = useStyles();\n\n  const handleDifficultySelect = (event, value) => {\n    setDifficulty(value);\n  };\n\n  return (\n    <Grid container direction=\"column\" className={classes.startPageRoot}>\n      <Grid item>\n        Difficulty\n        <Tooltip title=\"# of strings to guess\">\n          <InfoIcon fontSize=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item>\n        <Slider\n          style={{ width: 200 }}\n          value={difficulty}\n          valueLabelDisplay=\"auto\"\n          step={1}\n          marks\n          min={1}\n          max={6}\n          onChange={handleDifficultySelect}\n        />\n      </Grid>\n      <Grid>\n        <Button onClick={() => setStarted(true)} variant=\"outlined\">\n          Start\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default StartPage;\n","import StringGroup from \"./StringGroup\";\nimport StartPage from \"./StartPage\";\nimport { useState } from \"react\";\n\nfunction Main({ isStarted, setStarted }) {\n  const [difficulty, setDifficulty] = useState(1);\n\n  return isStarted ? (\n    <StringGroup difficulty={difficulty} setStarted={setStarted} />\n  ) : (\n    <StartPage\n      setDifficulty={setDifficulty}\n      difficulty={difficulty}\n      setStarted={setStarted}\n    />\n  );\n}\n\nexport default Main;\n","import { useState } from \"react\";\nimport Main from \"./Main\";\n\nfunction App() {\n  const [isStarted, setStarted] = useState(false);\n\n  return (\n    <Main\n      isStarted={isStarted}\n      setStarted={(isStarted) => setStarted(isStarted)}\n    />\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}